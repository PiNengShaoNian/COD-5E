4.19本练习题讨论性能 与功耗的关系。假设数据通路各部件(指令存储器、寄存器、数据存储器)
的功耗如下表所示，其他部件的功耗可以忽略。
指令存储器   一次读寄存器   写寄存器   读数据存储器   写数据存储器
140pJ           70pJ        60pJ       140pJ         120pJ
假定数据通路上的部件延迟如下表所示,其他功能部件的延迟可以忽略。
指令存储器    控制     寄存器读或写    ALU     数据存储读或写
200ps        150ps        90ps       90ps        250ps
4.19.1[10]<4.3,4.6,4.14>在单周期设计和五级流水线设计中执行一条加法指令的功耗分别是
多少?
4.19.2 [10] <4.6, 4.14 >功耗消耗最大的MIPS指令是哪一条?执行这条指令的功耗是多少?
4.19.3 [10]<4.6, 4. 14>如果功耗是最重要的约束，应该怎样设计流水线?在这种流水线下执行-条
lw指令时的功耗减小的比例是多少?
4.19.4 [10]<4.6, 4. 14>如果像练习题4.19. 3中那样设计流水线，其对性能会造成多大的影响?
4.19.5 [10] <4.6, 4. 14 >我们可以去掉MemRead控制信号，即每个周期都读数据存储器( MemRead恒为
1)。解释为什么去掉该控制信号后处理器依然能正常工作。它对时钟频率和功耗又有什么影响?
4.19.6[10]<4.6,4.14>如果一个单元的空闲功耗仅为正常工作时的10%，每个周期指令存储器的
功耗是多少?指令存储器消耗的功耗中有多少是空闲功耗?

答:
4.19.1
两种设计产生的能量消耗都是一样的, I-Mem被读取，两个寄存器被读取，一个子寄存器被写所以
140pJ + 2 * 70pJ + 60pJ = 340pJ

4.19.2
每种指令都需要读取指令存储器，每种指令都会读取两个寄存器(即使其中只有一个读取值被使用)，
一条load指令，需要读一次存储器和写一次寄存器，一条sw指令需要写一次存储器，其他指令
要么不写寄存器(比如beq)，要么写一个寄存器，因为读一次存储器和写一次寄存器需要的能量
大于写一次寄存器，所以最消耗能量的指令为load。
140pJ + 2 * 70pJ + 60pJ + 140pJ = 480pJ


4.19.3
每条指令都会读寄存器存储器，然而我们可以必变不必要的寄存器读，要达成这点我们可以加
两个信号RegRead1,RegRead2到寄存器堆的输入,去控制是否读取一个寄存器，我们必须快速的
生成控制信号以避免增长时钟周期。有了这些控制信号一个lw指令只需要一个寄存器读(仍然需要
读取一个寄存器值以生成内存地址)

Energy before change                         Energy saved by change   %saving
140pJ + 2 * 70pJ + 60pJ + 140pJ = 480pJ          70pJ                  14.6%


4.19.4
在改进之前，控制单元解码指令和寄存器读可以并行的进行，改进后，控制单元和寄存器堆的读
不能并行的进行，这回延长ID阶段的延迟，而且如果ID阶段成为最长延迟的阶段的会这将会影响
处理器的时钟周期长度
Clock cycle time before change       Clock cycle time after chagne
250ps (D-Mem in Mem stage)             No change(150ps + 90ps < 250ps)


4.19.5
如果每条指令都会进行寄存器读，要被读取值会被使用到(lw指令)，或者读取值不会通过WB Mux
多选器(一条非lw指令)，或者该指令不会写任何寄存,这个改变不会改变时钟周期长度，应为现有
时钟周期的长度已经能容纳最长延迟的阶段了。但的确会影响功耗: 因为正常情况下一个内存读只发生
在lw指令的Mem阶段
