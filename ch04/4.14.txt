4.14本练习 题讨论流水线处理器的延迟时间槽、控制冒险和分支执行之间的关系。假设下列MIPS代
码在一个五级流水线:有完全旁路和预测分支总发生的处理器上运行。试根据下面的两个序列
回答下列问题。
        lw r2,0(r1)
label1: beq r2,r0,labe12 # not taken once, then taken
        lw r3,0(r2)
        beq r3,r0,labe11 # taken
        add r1,r3,rl
labe12: sw r1,0(r2)

4.14.1 [10] <4. 8>画出该指令序列的流水线执行图，假设没有延迟时间槽而且在EX级执行分支。
4.14.2 [10] <4.8>重做练习题4.14. 1,但是假设使用了延迟时间槽。给定的代码中，跟在分支之后
的指令是该分支的延迟槽指令。
4.14.3 [20] <4.8>不同于需要一个ALU操作，另-种提前确定分支方向的方法是使用“bez rd, la-
bel”和“bnez rd, label”之类的条件分支指令，该类条件分支指令根据寄存器值是否为零
决定是否分支。变换原指令序列以使用该类条件分支指令而非beq指令。假设寄存器$8是临
时寄存器，并且可以使用R型指令seq (set if equal,相等置位)。
4.8节说明了如何把分支执行提前到ID级以减少控制冒险。这个方法需要在ID级增加- -个专用
的比较器，如图4-62所示。但是这个方法增加了ID 级的延迟，并且需要额外的旁路逻辑和冒
险检测。
4.14.4 [10] <4. 8>以指令序列中第一条分 支指令为例，说明图4-62中为支持在ID级执行分支应加入
的冒险检测逻辑。该逻辑需要检测什么类型的冒险?
4.14.5 [10] <4. 8>对给定的指令序列，把执行分支移到ID级带来的加速比是多少?为什么?假设ID
级进行的额外比较不影响时钟周期。
4.14.6[10]<4.8>以指令序列中第一条分支指令为例，说明为支持在ID级执行分支应加人的旁路。
比较新旁路单元与图4-62中旁路单元的复杂度。

4.14.1
Executed Instructions                        Pipeline Cycles
                            1    2    3    4    5    6    7    8    9    10    11    12    13    14    15    16
lw r2,0(r1)                 IF   ID   EX  MEM  WB
beq r2,r0,labe12                 IF   ID  ***  EX   MEM   WB
lw r3,0(r2)
beq r3,r0,labe11
add r1,r3,rl
sw r1,0(r2)