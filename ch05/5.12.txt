5.12在这个练习中，我们将研究对页表进行空间/时间的优化。下表是--个虚拟存储器系统的参数。
虚拟地址(位)        物理DRAM        页大小         PTE大小(字节)
43                  16GiB           4KiB               4

5.12.1 [10] <5.7>对于一个单级页表，需要多少页表项(PTE)?存放页表需要多少物理存储器?
5.12.2 [10] <5.7>使用多级页表可以降低物理存储器中页表的消耗，它在物理存储器中只保存活跃的
PTE。这种情况下，需要多少级的页表?如果TLB缺失，地址转换需要访问多少次存储器?
5.12.3 [15] <5.7>反置页表可以用来进一步优化空间和时间。存放页表需要多少PTE? 假设执行一个
哈希表，当TLB缺失时，在正常情况下和最差情况下的存储器访问次数分别是多少?

下表是一个有4项内容的TLB:
入口ID   有效位   虚拟地址页   修改位   保护位   物理地址页
1          1        140        1        RW       30
2          0        40         0        RX       34
3          1        200        1        RO       32
4          1        280        0        RW       31

5.12.4 [5] <5.7>在什么样的情况下第二项的有效位被置为0?
5.12.5 [5]<5.7> 当一条指令写人虚拟地址页号为30处时，会发生什么情况?什么时候软件管理的
TLB比硬件管理的TLB速度快?
5.12.6 [5] <5.7>当一条指令写人虚拟地址页200时，会发生什么情况?

答:
5.12.1
最糟糕的情况有2 * (43 - 12)个页表项，需要2 ^ (43 - 12) * 4bytes = 2 ** 33 = 8GB.

5.12.2
由于只有两层，设计者可以选择每个页表段的大小。在多级方案中，读取一个PTE需要访问表的每一级。

5.12.3
在一个倒置的页表中，PTE的数量可以减少到哈希表的大小加上碰撞的成本。在这种情况下，
为TLB缺失服务需要一个额外的引用来比较存储在哈希表中的一个或多个标签。

5.12.4
如果页面被换成到磁盘就会失效。

5.12.5
对第30页的写入会产生一个TLB缺失。在软件可以预取TLB条目的情况下，软件管理的TLB会更快。

5.12.6
当一条指令试图对虚拟页200进行写，会导致一个中断的产生，因为该页被标记为只读的。