5.13在这个练习中，我们将研究替换策略是如何影响缺失率的。假设-一个有4个块的2路组相联
cache。你会发现画表对于解决练习题中的问题很有帮助，如下面的示范，地址序列为“0, 1, 
2, 3, 4"。

被访问的主存     命中/缺失   逐出的块      cache块的内容
块的地址                                 组0       组0       组1       组1

0                缺失                   主存[0]
1                缺失                   主存[0]            主存[1]
2                缺失                   主存[0]  主存[2]   主存[1]
3                缺失                   主存[0]  主存[2]   主存[1]    主存[3]
4                缺失           0       主存[4]  主存[2]   主存[1]    主存[3]
...
考虑如下的地址序列:0,2,4,8,10,12,14，16,0。

5.13.1 [5] <5.4,5.8>假定使用LRU替换策略，在这组地址序列中有多少次命中?
5.13.2 [5] <5.4,5.8>假定使用MRU (最近最常使用)替换策略，在这组地址序列中有多少次命中?
5.13.3 [5]<5.4,5.8>通过掷硬币来模拟随机替换策略。例如，“正面”表示逐出组中第-块，“反
面”表示逐出组中第二二块。在这组地址序列中有多少次命中?
5.13.4 [10]<5.4,5.8>为了最大化命中次数，每次替换时哪个块应该被逐出?如果使用了这个“最
优的”策略，在这组地址序列中有多少次命中?
5.13.5 [10] <5.4,5.8>请说明为什么实现这种对所有地址序列来说都是最优的cache替换策略很难?
5.13.6 [10] <5.4,5.8>假设在每次主存引用时，可以决定被请求的地址是否要被缓存，这对缺失率
有什么影响?

答:
5.13.1
0 hits

5.13.2
1 hits

5.13.3
1 hits or fewer

5.13.4
1次命中。只要命中数正确，任何地址序列都是可以的。

5.13.5
要被驱逐的最佳区块是在未来会引起最少缺失的区块。
不幸的是，缓存控制器不可能知道未来！我们最好的办法是进行良好的预测。

5.13.6
如果你知道一个地址的时间局部性很差，并且会与缓存中的另一个区块发生冲突，
那么通过不缓存该块就会降低冲突不命中率，另一方面选择不缓存的块不正确也会导致更高的缺失率。