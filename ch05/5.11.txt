5.11如5.7 节所述，虚拟存储器使用一个页表来追踪虚拟地址到物理地址之间的映射。这个练习说
明了当地址被访问时，页表如何更新。下表是在一个系统上所看见的虚拟地址流。假设4KiB的
页，一个4项的全相联TLB,使用严格的LRU替换算法。如果必须从磁盘中取回页，那么增加
下一次能取的最大页数:
4669, 2227, 13916, 34587, 48870, 12608, 49225

TLB
有效位    标记位    物理页号
1         11       12
1         7        4
1         3        6
0         4        9

页表
有效位        物理页/在磁盘上       有效位          物理页/在磁盘上
1                 5                  0               磁盘
0                磁盘                1                4
0                磁盘                0               磁盘
1                 6                  0               磁盘
1                 9                  1                3
1                 11                 1                12

5.11.1 [10] <5. 7>根据给出的地址流，以及TLB、页表的初始状态，请给出系统的最终状态。对于每
次访问，请列出是否在TLB中命中，是否在页表中命中或是发生缺页。
5.11.2 [15] <5.7>重复练习题5.11. 1,但是这次使用16KiB的页来代替4KiB的页。使用更大的页的
好处有哪些?缺点又有哪些?
5.11.3 [15] <5.4, 5.7>如果使用两路组相联的TLB,请指出TLB中最终的内容。如果TLB是直接映
射的，同样指出TLB中最终的内容。讨论使用TLB来获得高性能的重要性。如果没有TLB,那
么如何处理虚拟存储器访问?
有一些参数对页表整个大小会有影响。下面就列出一-些关键的页表参数。
虚拟地址位数         页的大小          页表项的大小
32位                 8KiB              4字节
5.11.4 [5]<5.7> 已知上表中的参数，一个系统用了一半的内存来运行5个应用程序，计算该系统使
用的页表总大小。
5.11.5 [10] <5.7>已知上表中的参数，一个系统用了一半的内存来运行5个应用程序，给定一个两级
的有256项的页表，计算该系统使用的页表总大小。假设主页表中每项是6字节，计算所需的
最小和最大的内存容量。
5.11.6 [10] <5.7>一名cache设计者要将一个4KiB的虚拟索引、物理标记的cache的容量增大，已知
页的大小在上表中列出,那么能否构建一个16KiB 的直接映射cache,假设块大小为2个字?设
计者如何增加cache的数据大小?

答:
5.11.1
Address    Virtual Page   TLB H/M                                TLB
                                       Valid                 Tag       Physical page
4669            1         TLB miss        1                   11           12
                          PT hit          1                   7            4
                          PF              1                   3            6
                                          1(last access 0)    1            13

2227            0         TLB miss        1(last access 1)    0            5
                          PT hit          1                   7            4
                                          1                   3            6
                                          1(last access 0)    1            13

13916           3         TLB hit         1(last access 1)    0            5
                                          1                   7            4
                                          1(last access 2)    3            6
                                          1(last access 0)    1            13

34587           8         TLB miss        1(last access 1)    0            5
                          PT hit          1(last access 3)    8            14
                          PF              1(last access 2)    3            6
                                          1(last access 0)    1            13

48870           11        TLB miss        1(last access 1)    0            5
                          PT hit          1(last access 3)    8            14
                                          1(last access 2)    3            6
                                          1(last access 4)    11           12

12608           3         TLB hit         1(last access 1)    0            5
                                          1(last access 3)    8            14
                                          1(last access 5)    3            6
                                          1(last access 4)    11           12

49225           12        TLB miss        1(last access 6)    12           15
                                          1(last access 3)    8            14
                                          1(last access 5)    3            6
                                          1(last access 4)    11           12


5.11.2
Address    Virtual Page   TLB H/M                                TLB
                                       Valid                 Tag       Physical page
4669            0         TLB miss        1                   11           12
                          PT hit          1                   7            4
                                          1                   3            6
                                          1(last access 0)    0            5

2227            0         TLB hit         1                   11           12
                                          1                   7            4
                                          1                   3            6
                                          1(last access 1)    0            5

13916           0         TLB hit         1                   11           12
                                          1                   7            4
                                          1                   3            6
                                          1(last access 2)    0            5

34587           2         TLB miss        1(last access 3)    2            13
                          PT hit          1                   7            4
                          PF              1                   3            6
                                          1(last access 2)    0            5

48870           2        TLB hit          1(last access 4)    2            13
                                          1                   7            4
                                          1                   3            6
                                          1(last access 2)    0            5

12608           0         TLB hit         1(last access 4)    2            13
                                          1                   7            4
                                          1                   3            6
                                          1(last access 5)    0            5

49225           3        TLB hit          1(last access 4)    2            13
                                          1                   7            4
                                          1(last access 6)    3            6
                                          1(last access 5)    0            5

更大的页面大小可以减少TLB的缺失率，但会导致更高的碎片化和物理内存的低利用率。

5.11.3
所有的内存引用都必须对照页表进行交叉引用，TLB允许在不访问片外内存的情况下进行引用（在普通情况下）。
如果没有TLB，内存访问时间将大大增加。

5.11.4
只用了一半的内存，那么使用中的页表就只占了总页表的一半
标签位为 32 - log2(8192) = 32 = 13 = 19bits. 那么5个页表就需要
5 * （5 ^ 19 / 2 * 4) bytes = 5MB.

5.11.5


